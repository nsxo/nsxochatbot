{"version":3,"sources":["../../../../../src/components/Form/PinInput/hooks/usePinInput.ts"],"sourcesContent":["'use client';\n\nimport { useCallback, useRef } from 'react';\n\nimport { Keys } from 'helpers/accessibility';\nimport { clamp } from 'helpers/math';\nimport { useCustomEnsuredControl } from 'hooks/useEnsureControl';\n\nexport enum BiometricType {\n  FACEID = 'faceid',\n  FINGERPRINT = 'fingerprint',\n}\n\ninterface UsePinInputProps {\n  pinCount: number;\n  value?: number[];\n  onChange?(value: number[]): void;\n  onBiometricAuth?(): void;\n  biometricType?: BiometricType;\n}\n\nconst BIOMETRIC_AUTH_BUTTON_VALUE = 'BiometricAuth';\nexport const DEFAULT_PINS = [1, 2, 3, 4, 5, 6, 7, 8, 9, BIOMETRIC_AUTH_BUTTON_VALUE, 0, Keys.BACKSPACE];\n\nexport const getAvailablePins = (biometricType?: BiometricType) => {\n  const pins = [...DEFAULT_PINS];\n\n  if (!biometricType) {\n    const biometricIndex = pins.indexOf(BIOMETRIC_AUTH_BUTTON_VALUE);\n    if (biometricIndex !== -1) {\n      pins.splice(biometricIndex, 1);\n    }\n  }\n\n  return pins;\n};\n\nexport const usePinInput = ({\n  pinCount,\n  value: valueProp = [],\n  onChange,\n  onBiometricAuth,\n  biometricType = undefined,\n}: UsePinInputProps) => {\n  const PINS = getAvailablePins(biometricType);\n  const inputRefs = useRef<HTMLLabelElement[]>([]).current;\n  const [value, setValue] = useCustomEnsuredControl({\n    defaultValue: valueProp,\n    onChange,\n  });\n\n  const focusByIndex = (index: number) => {\n    requestAnimationFrame(() => inputRefs[index]?.focus());\n  };\n\n  const setValueByIndex = (index: number, newValue: number) => {\n    setValue((prev) => {\n      const nextValue = [...prev];\n      nextValue[index] = newValue;\n      return nextValue;\n    });\n  };\n\n  const removeLastValue = (currentIndex: number) => {\n    setValue((prev) => prev.slice(0, -1));\n    focusByIndex(currentIndex - 1);\n  };\n\n  const handleClickValue = useCallback((enteredValue: number) => {\n    const lastIndex = clamp(value.length, 0, pinCount - 1);\n    setValueByIndex(lastIndex, enteredValue);\n    focusByIndex(lastIndex + 1);\n  }, [value, pinCount]);\n\n  const handleClickBackspace = useCallback(() => {\n    removeLastValue(value.length - 1);\n  }, [value]);\n\n  const handleBiometricAuth = useCallback(() => {\n    if (onBiometricAuth) {\n      onBiometricAuth();\n    }\n  }, [onBiometricAuth]);\n\n  const handleButton = useCallback((index: number, button: string) => {\n    const numButton = Number(button);\n    if (!Number.isNaN(numButton) && PINS.includes(numButton)) {\n      setValueByIndex(index, numButton);\n      focusByIndex(index + 1);\n    }\n\n    switch (button) {\n      case Keys.BACKSPACE:\n        removeLastValue(index);\n        break;\n\n      case Keys.ARROW_LEFT:\n        focusByIndex(index - 1);\n        break;\n\n      case Keys.ARROW_RIGHT:\n        focusByIndex(index + 1);\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n\n  const setInputRefByIndex = useCallback((index: number, ref: HTMLLabelElement | null) => {\n    if (!ref) {\n      return;\n    }\n\n    inputRefs[index] = ref;\n  }, []);\n\n  const onElementClick = useCallback((element: string | number) => {\n    if (element === Keys.BACKSPACE) {\n      handleClickBackspace();\n      return;\n    }\n\n    if (element === BIOMETRIC_AUTH_BUTTON_VALUE) {\n      handleBiometricAuth();\n      return;\n    }\n\n    handleClickValue(Number(element));\n  }, [handleClickValue, handleClickBackspace, handleBiometricAuth]);\n\n  return {\n    value,\n    setInputRefByIndex,\n    onElementClick,\n    handleButton,\n    PINS,\n  };\n};\n"],"names":["useCallback","useRef","Keys","clamp","useCustomEnsuredControl","BiometricType","BIOMETRIC_AUTH_BUTTON_VALUE","DEFAULT_PINS","BACKSPACE","getAvailablePins","biometricType","pins","biometricIndex","indexOf","splice","usePinInput","pinCount","value","valueProp","onChange","onBiometricAuth","undefined","PINS","inputRefs","current","setValue","defaultValue","focusByIndex","index","requestAnimationFrame","focus","setValueByIndex","newValue","prev","nextValue","removeLastValue","currentIndex","slice","handleClickValue","enteredValue","lastIndex","length","handleClickBackspace","handleBiometricAuth","handleButton","button","numButton","Number","isNaN","includes","ARROW_LEFT","ARROW_RIGHT","setInputRefByIndex","ref","onElementClick","element"],"mappings":"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"}