version: '3.8'

services:
  bot:
    build: .
    container_name: telegram_bot
    env_file: .env
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - bot_network

  webhook:
    build: .
    container_name: telegram_webhook
    command: python src/webhook_server.py
    env_file: .env
    ports:
      - "${WEBHOOK_PORT:-8000}:8000"
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - bot_network

  db:
    image: postgres:15-alpine
    container_name: telegram_db
    environment:
      POSTGRES_DB: telegram_bot
      POSTGRES_USER: ${DB_USER:-telegram}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_me_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - bot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-telegram}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  bot_network:
    driver: bridge

volumes:
  postgres_data: 